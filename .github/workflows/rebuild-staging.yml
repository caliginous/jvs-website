name: Rebuild JVS Website - Staging

on:
  workflow_dispatch:
    inputs:
      user:
        description: 'User who triggered the rebuild'
        required: true
        default: 'webhook'
      reason:
        description: 'Reason for rebuild'
        required: false
        default: 'Content release'
  repository_dispatch:
    types: [wordpress_update_staging]

jobs:
  rebuild-staging:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: npm install
      
    - name: Clean build artifacts
      run: |
        echo "🧹 Cleaning build artifacts..."
        rm -rf .vercel/output .next node_modules/.cache .swc .out || true
        echo "✅ Clean completed"
        
    - name: Create staging environment file
      run: |
        echo "🔧 Creating .env.staging file..."
        echo "NEXT_PUBLIC_GRAPHQL_ENDPOINT=https://backend.jvs.org.uk/graphql" > .env.staging
        echo "NEXT_PUBLIC_APP_ENV=staging" >> .env.staging
        echo "✅ Environment file created"
        
    - name: Build Next.js site (clean minimal build)
      run: |
        echo "🏗️ Starting Next.js build..."
        npm run build:minimal
        echo "✅ Next.js build completed"
      env:
        WP_GRAPHQL_URL: https://backend.jvs.org.uk/graphql
        BUILD_TIME_BACKEND_URL: https://backend.jvs.org.uk/graphql
        NODE_ENV: production
        
    - name: Build for Cloudflare Workers
      run: |
        echo "⚡ Building for Cloudflare Workers..."
        npx @cloudflare/next-on-pages
        echo "✅ Cloudflare Workers build completed"
        
    - name: Create assets ignore file
      run: |
        echo "📝 Creating .assetsignore file..."
        echo "_worker.js" > .vercel/output/static/.assetsignore
        echo "✅ Assets ignore file created"
        
    - name: Deploy to Cloudflare Workers (Staging)
      run: |
        echo "🚀 Deploying to staging..."
        npx wrangler deploy --env staging
        echo "✅ Staging deployment completed"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Run staging tests
      run: |
        echo "🧪 Running staging tests..."
        if [ -f "test-full-site.js" ]; then
          node test-full-site.js staging || echo "⚠️ Tests failed but deployment continues"
        else
          echo "⚠️ Test suite not found, skipping tests"
        fi
        
    - name: Notify completion
      run: |
        echo "✅ JVS website staging rebuild completed successfully!"
        echo "🌐 Staging URL: https://staging.jvs.org.uk"
        echo "⚡ Worker URL: https://jvs-website-staging.dan-794.workers.dev"
        echo "📅 Deployed at: $(date)"
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "👤 Triggered by: ${{ github.event.inputs.user }}"
          echo "📝 Reason: ${{ github.event.inputs.reason }}"
        else
          echo "👤 Triggered by: WordPress content update webhook"
          echo "📝 Reason: Automated content deployment from WordPress"
        fi